// frontend/src/components/HealthReport.jsx
import React from 'react';
import { Download, Share2, Calendar, User, FileText } from 'lucide-react';

export default function HealthReport({ healthData, onClose }) {
  if (!healthData) return null;

  const generateReport = () => {
    const reportDate = new Date().toLocaleDateString();
    const reportTime = new Date().toLocaleTimeString();
    
    return {
      title: `Health Assessment Report - ${healthData.name || 'Patient'}`,
      date: reportDate,
      time: reportTime,
      patientInfo: {
        name: healthData.name || 'Not provided',
        age: healthData.age || 'Not provided',
        gender: healthData.gender || 'Not provided',
        location: healthData.location || 'Not provided'
      },
      vitals: {
        bloodPressure: healthData.bloodPressure ? 
          `${healthData.bloodPressure.systolic}/${healthData.bloodPressure.diastolic} mmHg` : 'Not provided',
        heartRate: healthData.heartRate ? `${healthData.heartRate} BPM` : 'Not provided',
        glucoseLevel: healthData.glucoseLevel ? `${healthData.glucoseLevel} mg/dL` : 'Not provided',
        weight: healthData.weight ? `${healthData.weight} kg` : 'Not provided',
        bmi: healthData.bmi ? `${healthData.bmi} kg/mÂ²` : 'Not provided'
      },
      medicalHistory: {
        existingConditions: healthData.existingConditions || 'None reported',
        pastTreatments: healthData.pastTreatments || 'None reported',
        allergies: healthData.allergies || 'None reported'
      },
      medications: healthData.medications?.filter(med => med.name) || [],
      lifestyle: {
        exerciseRoutines: healthData.exerciseRoutines || 'Not specified',
        sleepPatterns: healthData.sleepPatterns || 'Not specified',
        dietHabits: healthData.dietHabits || 'Not specified',
        stressLevels: healthData.stressLevels ? `${healthData.stressLevels}/10` : 'Not specified'
      }
    };
  };

  const report = generateReport();

  const downloadReport = () => {
    const reportContent = `
HEALTH ASSESSMENT REPORT
========================

Patient Information:
- Name: ${report.patientInfo.name}
- Age: ${report.patientInfo.age}
- Gender: ${report.patientInfo.gender}
- Location: ${report.patientInfo.location}

Report Generated: ${report.date} at ${report.time}

VITAL SIGNS:
- Blood Pressure: ${report.vitals.bloodPressure}
- Heart Rate: ${report.vitals.heartRate}
- Glucose Level: ${report.vitals.glucoseLevel}
- Weight: ${report.vitals.weight}
- BMI: ${report.vitals.bmi}

MEDICAL HISTORY:
- Existing Conditions: ${report.medicalHistory.existingConditions}
- Past Treatments: ${report.medicalHistory.pastTreatments}
- Allergies: ${report.medicalHistory.allergies}

MEDICATIONS:
${report.medications.map(med => 
  `- ${med.name}: ${med.dosage} (${med.frequency})${med.sideEffects ? ` - Side effects: ${med.sideEffects}` : ''}`
).join('\n')}

LIFESTYLE FACTORS:
- Exercise Routines: ${report.lifestyle.exerciseRoutines}
- Sleep Patterns: ${report.lifestyle.sleepPatterns}
- Diet Habits: ${report.lifestyle.dietHabits}
- Stress Levels: ${report.lifestyle.stressLevels}

RECOMMENDATIONS:
1. Continue regular health monitoring
2. Maintain current healthy lifestyle habits
3. Schedule regular check-ups with healthcare provider
4. Monitor any changes in symptoms or conditions

This report is generated by the Inclusive AR/VR Coach platform.
For medical advice, please consult with qualified healthcare professionals.
    `;

    const blob = new Blob([reportContent], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `health-report-${report.patientInfo.name.replace(/\s+/g, '-')}-${report.date.replace(/\//g, '-')}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  const shareReport = () => {
    if (navigator.share) {
      navigator.share({
        title: report.title,
        text: `Health assessment report for ${report.patientInfo.name}`,
        url: window.location.href
      });
    } else {
      // Fallback: copy to clipboard
      navigator.clipboard.writeText(`Health Report for ${report.patientInfo.name} - ${report.date}`);
      alert('Report information copied to clipboard!');
    }
  };

  return (
    <div className="health-report">
      <div className="report-header">
        <div className="report-title">
          <FileText size={24} />
          <h2>{report.title}</h2>
        </div>
        <div className="report-actions">
          <button className="btn secondary" onClick={shareReport}>
            <Share2 size={16} />
            Share
          </button>
          <button className="btn" onClick={downloadReport}>
            <Download size={16} />
            Download
          </button>
          <button className="btn secondary" onClick={onClose}>
            Close
          </button>
        </div>
      </div>

      <div className="report-content">
        <div className="report-section">
          <h3>
            <User size={20} />
            Patient Information
          </h3>
          <div className="info-grid">
            <div className="info-item">
              <label>Name:</label>
              <span>{report.patientInfo.name}</span>
            </div>
            <div className="info-item">
              <label>Age:</label>
              <span>{report.patientInfo.age}</span>
            </div>
            <div className="info-item">
              <label>Gender:</label>
              <span>{report.patientInfo.gender}</span>
            </div>
            <div className="info-item">
              <label>Location:</label>
              <span>{report.patientInfo.location}</span>
            </div>
          </div>
        </div>

        <div className="report-section">
          <h3>
            <Calendar size={20} />
            Report Details
          </h3>
          <div className="info-grid">
            <div className="info-item">
              <label>Generated:</label>
              <span>{report.date} at {report.time}</span>
            </div>
            <div className="info-item">
              <label>Platform:</label>
              <span>Inclusive AR/VR Coach</span>
            </div>
          </div>
        </div>

        <div className="report-section">
          <h3>Vital Signs</h3>
          <div className="vitals-grid">
            <div className="vital-item">
              <label>Blood Pressure:</label>
              <span className="vital-value">{report.vitals.bloodPressure}</span>
            </div>
            <div className="vital-item">
              <label>Heart Rate:</label>
              <span className="vital-value">{report.vitals.heartRate}</span>
            </div>
            <div className="vital-item">
              <label>Glucose Level:</label>
              <span className="vital-value">{report.vitals.glucoseLevel}</span>
            </div>
            <div className="vital-item">
              <label>Weight:</label>
              <span className="vital-value">{report.vitals.weight}</span>
            </div>
            <div className="vital-item">
              <label>BMI:</label>
              <span className="vital-value">{report.vitals.bmi}</span>
            </div>
          </div>
        </div>

        <div className="report-section">
          <h3>Medical History</h3>
          <div className="medical-info">
            <div className="medical-item">
              <label>Existing Conditions:</label>
              <p>{report.medicalHistory.existingConditions}</p>
            </div>
            <div className="medical-item">
              <label>Past Treatments:</label>
              <p>{report.medicalHistory.pastTreatments}</p>
            </div>
            <div className="medical-item">
              <label>Allergies:</label>
              <p>{report.medicalHistory.allergies}</p>
            </div>
          </div>
        </div>

        {report.medications.length > 0 && (
          <div className="report-section">
            <h3>Current Medications</h3>
            <div className="medications-list">
              {report.medications.map((med, index) => (
                <div key={index} className="medication-item">
                  <div className="med-name">{med.name}</div>
                  <div className="med-details">
                    <span>Dosage: {med.dosage}</span>
                    <span>Frequency: {med.frequency}</span>
                    {med.sideEffects && <span>Side Effects: {med.sideEffects}</span>}
                  </div>
                </div>
              ))}
            </div>
          </div>
        )}

        <div className="report-section">
          <h3>Lifestyle Factors</h3>
          <div className="lifestyle-info">
            <div className="lifestyle-item">
              <label>Exercise Routines:</label>
              <p>{report.lifestyle.exerciseRoutines}</p>
            </div>
            <div className="lifestyle-item">
              <label>Sleep Patterns:</label>
              <p>{report.lifestyle.sleepPatterns}</p>
            </div>
            <div className="lifestyle-item">
              <label>Diet Habits:</label>
              <p>{report.lifestyle.dietHabits}</p>
            </div>
            <div className="lifestyle-item">
              <label>Stress Levels:</label>
              <p>{report.lifestyle.stressLevels}</p>
            </div>
          </div>
        </div>

        <div className="report-section">
          <h3>Recommendations</h3>
          <div className="recommendations">
            <div className="recommendation-item">
              <strong>1. Regular Monitoring:</strong> Continue tracking your health metrics regularly
            </div>
            <div className="recommendation-item">
              <strong>2. Healthcare Consultation:</strong> Schedule regular check-ups with your healthcare provider
            </div>
            <div className="recommendation-item">
              <strong>3. Lifestyle Maintenance:</strong> Maintain healthy lifestyle habits and make improvements where needed
            </div>
            <div className="recommendation-item">
              <strong>4. Medication Management:</strong> Follow prescribed medication schedules and report any side effects
            </div>
          </div>
        </div>

        <div className="report-footer">
          <p className="disclaimer">
            <strong>Disclaimer:</strong> This report is generated for informational purposes only. 
            It should not replace professional medical advice, diagnosis, or treatment. 
            Always consult with qualified healthcare professionals for medical decisions.
          </p>
        </div>
      </div>
    </div>
  );
}
